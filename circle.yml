general:
  branches:
    ignore:
      - gh-pages # list of branches to ignore

machine:
  services:
    - docker
  hosts:
    typo3-app: 127.0.0.1
    flow: 127.0.0.1
    neos: 127.0.0.1

dependencies:
  cache_directories:
    - "~/docker"
  
  pre:
    - docker info && docker version
    # Cache some Docker images to make builds faster
    - mkdir -p ~/docker/tutum ~/docker/million12
    # Cache tutum/mariadb
    - if [[ -e ~/docker/tutum/mariadb.tar ]]; then docker load -i ~/docker/tutum/mariadb.tar; else docker pull tutum/mariadb:latest && docker save tutum/mariadb > ~/docker/tutum/mariadb.tar; fi
    # Cache million12/php-app - base for million12/typo3-flow-neos-abstract and million12/behat-selenium
    - if [[ -e ~/docker/million12/php-app.tar ]]; then docker load -i ~/docker/million12/php-app.tar; else docker pull million12/php-app:latest && docker save million12/php-app > ~/docker/million12/php-app.tar; fi

  override:
    - docker pull tutum/mariadb:latest
    - docker pull million12/php-app:latest
#    - docker pull million12/behat-selenium:latest
    
  post:
    # Launch DB backend
    - docker run -d --name=db -v /var/log --env="MARIADB_PASS=my-pass" tutum/mariadb
    - docker logs -f db | tee -a ${CIRCLE_ARTIFACTS}/docker-db.log:
        background: true
    # Build abstract million12/typo3-flow-neos-abstract image
    - docker build -t million12/typo3-flow-neos-abstract .

# Run tests
test:
  pre:
    - docker logs db && docker inspect db # Temporary - to investigate some random issues with this container...
    - docker ps
    
  override:
    # ##################################################
    # Build TYPO3 Neos container and do some basic tests
    # ##################################################
    - docker build --tag=test/typo3-neos Tests/Neos/
    # Launch it with default ENV variables
    - docker run -d --name=neos -p=8080:80 --link=db:db --env="T3APP_NAME=neos" test/typo3-neos
    - docker logs -f neos > ${CIRCLE_ARTIFACTS}/docker-neos.log:
        background: true
    # Wait till TYPO3 Neos is fully configured
    - while true; do if grep "nginx entered RUNNING state" ${CIRCLE_ARTIFACTS}/docker-neos.log; then break; else sleep 1; fi done
    # Test: do basic front-end tests 
    - curl -L --head http://neos:8080 && curl -L http://neos:8080
    - curl --head http://neos:8080 | grep "HTTP/1.1 200 OK" && curl --head http://neos:8080 | grep "X-Flow-Powered"
    - curl http://neos:8080 | grep "Powered by TYPO3 Neos"
    - curl -L http://neos:8080/neos | grep "TYPO3 Neos Login"
    # Test: check if Neos is installed in $T3APP_NAME directory
    - docker run -ti --volumes-from=neos million12/php-app "su www -c \"cd && ls -al neos\""
    # Clean up
    - docker rm -f neos || true
    
    
    # ###################################################################
    # Launch Neos container again, but do only initialisation for testing
    # ###################################################################
    - docker run -d --name=neos-testing -p=8080:80 --link=db:db --env="T3APP_DO_INIT=false" --env="T3APP_DO_INIT_TESTS=true" --env="T3APP_VHOST_NAMES=neos dev.behat.neos" test/typo3-neos
    - docker logs -f neos-testing > ${CIRCLE_ARTIFACTS}/docker-neos-testing.log:
        background: true
    # Wait till TYPO3 Neos is fully configured
    - while true; do if grep "nginx entered RUNNING state" -a ${CIRCLE_ARTIFACTS}/docker-neos-testing.log; then break; else sleep 1; fi done
    - curl -L --head http://neos:8080 && curl -L http://neos:8080
    # DB was not configured, so expect 'Database Error' if you go to front-end page
    - curl -L http://neos:8080 | grep "Database Error"    
    # Run all Neos tests (unit, functional, behat), but do not fail the build in case of any problems there. These are vendor tests and errors there do not indicate that this Docker image is faulty.
    - |
      docker run -ti --volumes-from=neos-testing --link=neos-testing:web --link=db:db million12/behat-selenium "
        env && \
        echo \$WEB_PORT_80_TCP_ADDR \$WEB_ENV_T3APP_VHOST_NAMES >> /etc/hosts && cat /etc/hosts && \
        su www -c \"
          cd ~/typo3-app && \
          echo -e '\n\n======== RUNNING TYPO3 NEOS TESTS =======\n\n' && \
          bin/phpunit -c Build/BuildEssentials/PhpUnit/UnitTests.xml && \
          bin/phpunit -c Build/BuildEssentials/PhpUnit/FunctionalTests.xml && \
          bin/behat -c Packages/Application/TYPO3.Neos/Tests/Behavior/behat.yml
        \"
      " || true
    # Clean up
    - docker rm -f neos-testing || true


  post:
    - docker run --volumes-from=db busybox:latest ls -al /var/lib/mysql/
    - docker run --volumes-from=db busybox:latest ls -al /var/log/
    - docker run --volumes-from=db busybox:latest cat /var/log/mysql.log
    - docker run --volumes-from=db busybox:latest cat /var/log/mysql.err
